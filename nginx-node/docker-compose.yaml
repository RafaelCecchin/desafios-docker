version: '3'

services:

  node:
    build:
      context: .
      dockerfile: dockerfile.node
    image: rafaelcecchin/node
    container_name: node
    tty: true
    volumes:
      - ./app:/usr/src/app
    networks:
      - nodenet
    command: >
      sh -c "npm install && nodemon --legacy-watch index.js"
    entrypoint: dockerize -wait tcp://db:3306 -timeout 20s docker-entrypoint.sh
    depends_on:
      - db

  nginx:
    build:
      context: .
      dockerfile: dockerfile.nginx
    image: rafaelcecchin/nginx
    container_name: nginx
    networks:
      - nodenet
    ports:
      - "8080:80"
    depends_on:
      - node
    
  db:
    build:
      context: .
      dockerfile: dockerfile.db
    image: rafaelcecchin/db
    command: --innodb-use-native-aio=0
    container_name: db
    restart: always
    tty: true
    volumes:
      - ./db:/var/lib/mysql
      - ./migrations:/root/migrations
    environment:
      - MYSQL_DATABASE=nodedb
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_COLLATION=utf8mb4_general_ci
      - MYSQL_CHARSET=utf8mb4
      - LANG=C.UTF_8
    networks:
      - nodenet
    entrypoint: /bin/bash -c "/root/migrations/migrate.sh & /entrypoint.sh mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci"

networks:
  nodenet:
    driver: bridge
